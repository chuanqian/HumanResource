<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zaqacu.dao.BasicMoneyMapper">


    <resultMap id="BaseResultMap" type="com.zaqacu.entity.BasicMoney">
        <id column="basic_money_id" property="basicMoneyId" jdbcType="INTEGER"/>
        <result column="basic_money_num" property="basicMoneyNum" jdbcType="DOUBLE"/>
    </resultMap>


    <sql id="Base_Column_List">
    basic_money_id, basic_money_num
  </sql>


    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from basic_money
        where basic_money_id = #{basicMoneyId,jdbcType=INTEGER}
    </select>

    <select id="selectAllBasicMoneyBySql" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from basic_money
        <where>
            <if test="basicMoneyNum != null and basicMoneyNum != ''">
                basic_money_num = #{basicMoneyNum}
            </if>
        </where>
        limit #{start},#{rows}
    </select>

    <select id="selectAllBasicCount" resultType="Integer">
        select count(basic_money_id) from basic_money
    </select>

    <select id="selectAllBasicMoney" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from basic_money
    </select>

    <select id="selectOneBasicMoneyById" resultType="Double">
        select basic_money_num from basic_money where basic_money_id = #{basicMoneyId}
    </select>


    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from basic_money
    where basic_money_id = #{basicMoneyId,jdbcType=INTEGER}
  </delete>

    <delete id="deleteBasicMoneyBatch">
        delete from basic_money where basic_money_id in
        <foreach collection="basicMoneyIds" item="basicMoneyId" open="(" separator="," close=")">
            #{basicMoneyId}
        </foreach>
    </delete>


    <insert id="insert" parameterType="com.zaqacu.entity.BasicMoney">
    insert into basic_money (basic_money_id, basic_money_num)
    values (#{basicMoneyId,jdbcType=INTEGER}, #{basicMoneyNum,jdbcType=DOUBLE})
  </insert>


    <insert id="insertSelective" parameterType="com.zaqacu.entity.BasicMoney">
        insert into basic_money
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="basicMoneyId != null">
                basic_money_id,
            </if>
            <if test="basicMoneyNum != null">
                basic_money_num,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="basicMoneyId != null">
                #{basicMoneyId,jdbcType=INTEGER},
            </if>
            <if test="basicMoneyNum != null">
                #{basicMoneyNum,jdbcType=DOUBLE},
            </if>
        </trim>
    </insert>


    <update id="updateByPrimaryKeySelective" parameterType="com.zaqacu.entity.BasicMoney">
        update basic_money
        <set>
            <if test="basicMoneyNum != null">
                basic_money_num = #{basicMoneyNum,jdbcType=DOUBLE},
            </if>
        </set>
        where basic_money_id = #{basicMoneyId,jdbcType=INTEGER}
    </update>


    <update id="updateByPrimaryKey" parameterType="com.zaqacu.entity.BasicMoney">
    update basic_money
    set basic_money_num = #{basicMoneyNum,jdbcType=DOUBLE}
    where basic_money_id = #{basicMoneyId,jdbcType=INTEGER}
  </update>
</mapper>