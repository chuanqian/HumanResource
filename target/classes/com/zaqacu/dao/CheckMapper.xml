<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zaqacu.dao.CheckMapper">


    <resultMap id="BaseResultMap" type="com.zaqacu.entity.Check">
        <id column="check_id" property="checkId" jdbcType="INTEGER"/>
        <result column="check_bei_staff_uid" property="checkBeiStaffUid"/>
        <result column="check_type_id" property="checkTypeId" jdbcType="INTEGER"/>
        <result column="check_money" property="checkMoney" jdbcType="DOUBLE"/>
        <result column="check_time" property="checkTime" jdbcType="TIMESTAMP"/>
        <result column="check_staff_uid" property="checkStaffUid"/>
    </resultMap>


    <sql id="Base_Column_List">
    check_id, check_bei_staff_uid, check_type_id, check_money, check_time, check_staff_uid
  </sql>


    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from check_tb
        where check_id = #{checkId,jdbcType=INTEGER}
    </select>

    <select id="selectAllCheckByStaffUidAndDate" resultType="Double">
        select check_money from check_tb where check_bei_staff_uid=#{staffUid} and check_time between #{firstDay} and #{exitsDay}
    </select>

    <select id="selectAllCheckBySql" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from check_tb
        <where>
            <if test="startTime != null">
                check_time &gt;= #{startTime}
            </if>
            <if test="endTime != null">
                and check_time &lt;= #{endTime}
            </if>
            <if test="checkTypeId != null">
                and check_type_id = #{checkTypeId}
            </if>
            <if test="staffName != null and staffName != ''">
                and check_bei_staff_uid in (select staff_uid from staff where staff_name like #{staffName})
            </if>
        </where>
        limit #{start},#{rows}
    </select>

    <select id="selectAllCount" resultType="Integer">
      select count(check_id) from check_tb
    </select>


    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from check_tb
    where check_id = #{checkId,jdbcType=INTEGER}
  </delete>

    <delete id="deleteCheckRecordBatch">
        delete from check_tb where check_id in
        <foreach collection="checkIdList" item="checkId" open="(" separator="," close=")">
            #{checkId}
        </foreach>
    </delete>


    <insert id="insert" parameterType="com.zaqacu.entity.Check">
    insert into check_tb (check_id, check_bei_staff_uid, check_type_id,
      check_money, check_time, check_staff_uid
      )
    values (#{checkId,jdbcType=INTEGER}, #{checkBeiStaffUid}, #{checkTypeId,jdbcType=INTEGER},
      #{checkMoney,jdbcType=DOUBLE}, #{checkTime,jdbcType=TIMESTAMP}, #{checkStaffUid}
      )
  </insert>


    <insert id="insertSelective" parameterType="com.zaqacu.entity.Check">
        insert into check_tb
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="checkId != null">
                check_id,
            </if>
            <if test="checkBeiStaffUid != null">
                check_bei_staff_uid,
            </if>
            <if test="checkTypeId != null">
                check_type_id,
            </if>
            <if test="checkMoney != null">
                check_money,
            </if>
            <if test="checkTime != null">
                check_time,
            </if>
            <if test="checkStaffUid != null">
                check_staff_uid,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="checkId != null">
                #{checkId,jdbcType=INTEGER},
            </if>
            <if test="checkBeiStaffUid != null">
                #{checkBeiStaffUid},
            </if>
            <if test="checkTypeId != null">
                #{checkTypeId,jdbcType=INTEGER},
            </if>
            <if test="checkMoney != null">
                #{checkMoney,jdbcType=DOUBLE},
            </if>
            <if test="checkTime != null">
                #{checkTime,jdbcType=TIMESTAMP},
            </if>
            <if test="checkStaffUid != null">
                #{checkStaffUid},
            </if>
        </trim>
    </insert>


    <update id="updateByPrimaryKeySelective" parameterType="com.zaqacu.entity.Check">
        update check_tb
        <set>
            <if test="checkBeiStaffUid != null">
                check_bei_staff_uid = #{checkBeiStaffUid},
            </if>
            <if test="checkTypeId != null">
                check_type_id = #{checkTypeId,jdbcType=INTEGER},
            </if>
            <if test="checkMoney != null">
                check_money = #{checkMoney,jdbcType=DOUBLE},
            </if>
            <if test="checkTime != null">
                check_time = #{checkTime,jdbcType=TIMESTAMP},
            </if>
            <if test="checkStaffUid != null">
                check_staff_uid = #{checkStaffUid},
            </if>
        </set>
        where check_id = #{checkId,jdbcType=INTEGER}
    </update>


    <update id="updateByPrimaryKey" parameterType="com.zaqacu.entity.Check">
    update check_tb
    set check_bei_staff_uid = #{checkBeiStaffUid},
      check_type_id = #{checkTypeId,jdbcType=INTEGER},
      check_money = #{checkMoney,jdbcType=DOUBLE},
      check_time = #{checkTime,jdbcType=TIMESTAMP},
      check_staff_uid = #{checkStaffUid}
    where check_id = #{checkId,jdbcType=INTEGER}
  </update>


</mapper>